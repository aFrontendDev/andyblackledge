// layout.less

.page {
	margin-top: 58px;

	@media (min-width: $break-point-d) {
		margin-top: 70px;
	}
	@media (min-width: $break-point-e) {
		margin-top: 116px;
	}
}

.main {
	position: relative;
	z-index: 1;
	background-color: #FFF;
}

.layout {
	@include clearfix();
	position: relative;
	margin: 0 $ggw/2;
	max-width: $max-width;

	@media (min-width: $break-point-f) {
		margin: 0 auto;
	}
}

.masonry {
	overflow: hidden;
	clear: both;
}

.region {
	overflow: hidden;

	@media (min-width: $break-point-d) {
		position: relative;
		float: left;
	}

	.rtl & {

		@media (min-width: $break-point-d) {
			float: right;
		}
	}
}

.region-inner {
	position: relative;
}

.block {
	float: left;
	width: 100%;
	max-width: 100%;
	margin-bottom: $vr*3;

	.subnav & {
		margin-bottom: 0;
	}

	.rtl & {
		float: right;
	}

	img {
		max-width: 100%;
		height: auto;
		vertical-align: top;
	}

	&.block-last {

		& + .block {
			clear: both;
		}
	}

	.js .masonry & {
		margin-right: 0!important;

		@media (min-width: $break-point-d) {
			margin-bottom: 0!important;
		}
	}
}

.block-sizer {
	float: left;
	max-width: 100%;
}

.gutter-sizer {
	float: left;
	max-width: 100%;
}

.block-last-clear {
	clear: both;
}

@mixin region-blocks($region-outer-width:0, $region-inner-width:0) {
	.block-single {
		@media (min-width: $break-point-d) {
			@include fluid-width($gcw*1, $region-inner-width);
		}
	}

	.block-size-a {
		// 100% D

		@media (min-width: $break-point-d) {
			@include fluid-width(($gcw*12) + ($ggw*11), $region-inner-width);
		}
	}

	.block-size-b {
		// 50% D

		@media (min-width: $break-point-d) {
			@include fluid-width(($gcw*6) + ($ggw*5), $region-inner-width);
		}
	}

	.block-size-c {
		// 33% D

		@media (min-width: $break-point-d) {
			@include fluid-width(($gcw*4) + ($ggw*3), $region-inner-width);
		}
	}

	.block-size-d {
		// 50% D
		// 25% E+

		@media (min-width: $break-point-d) {
			@include fluid-width(($gcw*6) + ($ggw*5), $region-inner-width);
		}

		@media (min-width: $break-point-e) {
			@include fluid-width(($gcw*3) + ($ggw*2), $region-inner-width);
		}
	}

}

.region-a {

	// Grid layout above $break-point-X only
	@media (min-width: $break-point-d) {
		position: relative;
		float: left;
		@include fluid-width($region-a-width, $max-width);
		//margin: 0 10px;

		.region-inner{
			position: relative;
			@include fluid-width($region-a-inner-width, $region-a-width);
		}

		.block {
			@include fluid-margin-right($ggw, $region-a-inner-width);
		}

		.gutter-sizer {
			@include fluid-width($ggw, $region-a-inner-width);
		}
	}

	@include region-blocks($region-a-width, $region-a-inner-width);
}

// show the grid
.visible-grid-in {

	.block {
        background-color: rgba(255, 46, 47, 0.5);
		color: #FFF;
	}
}

//styleguide stuff

.gridblock {
	background: $brand-color-a;
	color: #FFF;
	padding: $vr*2 $vr*3;
	text-align: center;

	p {
		margin: 0;
	}
}
