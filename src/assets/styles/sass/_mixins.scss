@mixin placeholder($color) {
	:-moz-placeholder            { color: $color; } // Firefox 4-18
	::-moz-placeholder           { color: $color; } // Firefox 19+
	:-ms-input-placeholder       { color: $color; } // Internet Explorer 10+
	::-webkit-input-placeholder  { color: $color; } // Safari and Chrome
}

// Background sizing
@mixin background-size($size){
	-webkit-background-size: $size;
	 -moz-background-size: $size;
		 -o-background-size: $size;
			background-size: $size;
}

// Background sizing
@mixin background-size($size1, $size2){
	-webkit-background-size: $size1 $size2;
	 -moz-background-size: $size1 $size2;
		 -o-background-size: $size1 $size2;
			background-size: $size1 $size2;
}

// Fluid Widths
// calculates a "fluid" (percentage) width (Ethan Marcotte: target / context = result method: http://alistapart.com/article/fluidgrids)
@mixin fluid-width($target, $context) {
	width: 100%*($target/$context);
	// IE7 correction
	*width: (100%*($target/$context))-$grid-correction;
}

@mixin fluid-margin-right($target, $context) {
	margin-right: 100%*($target/$context);
	// IE7 correction
	*margin-right: (100%*($target/$context))-$grid-correction;
}

@mixin fluid-margin-left($target, $context) {
	margin-left: 100%*($target/$context);
	// IE7 correction
	*margin-left: (100%*($target/$context))-$grid-correction;
}

@mixin fluid-padding-right($target, $context) {
	padding-right: 100%*($target/$context);
	// IE7 correction
	*padding-right: (100%*($target/$context))-$grid-correction;
}

@mixin fluid-padding-left($target, $context) {
	padding-left: 100%*($target/$context);
	// IE7 correction
	*padding-left: (100%*($target/$context))-$grid-correction;
}

@mixin fluid-right($target, $context) {
	right: 100%*($target/$context);
	// IE7 correction
	*right: (100%*($target/$context))-$grid-correction;
}

@mixin fluid-left($target, $context) {
	left: 100%*($target/$context);
	// IE7 correction
	*left: (100%*($target/$context))-$grid-correction;
}


// For clearing floats
@mixin clearfix() {
	*zoom: 1;

	&:before,
	&:after {
		display: table;
		content: "";
	}

	&:after {
		clear: both;
	}
}


@mixin visually-hidden() {
	border: 0;
	clip: rect(0 0 0 0);
	height: 1px;
	margin: -1px;
	overflow: hidden;
	padding: 0;
	position: absolute;
	width: 1px;

	&.focusable:active,
	&.focusable:focus {
		clip: auto;
		height: auto;
		margin: 0;
		overflow: visible;
		position: static;
		width: auto;
	}
}

// Form input appearance
@mixin appearance($appearance){
	-webkit-appearance: $appearance;
	   -moz-appearance: $appearance;
	    -ms-appearance: $appearance;
		 -o-appearance: $appearance;
			appearance: $appearance;
}

// calc
@mixin calc($property, $expression) {
  #{$property}: -webkit-calc(#{$expression});
  #{$property}: calc(#{$expression});
}


@mixin underline-reset() {
	background: none;
}
