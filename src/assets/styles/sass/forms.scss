// forms.scss

$input-border-width: 1px;
$input-border-radius: 3px;

$input-height-smallscreen: $vr*4;
$input-padding-y-smallscreen: $vr;
$input-padding-x-smallscreen: 10px;

$input-height: $vr*5;
$input-padding-y: $vr;
$input-padding-x: 15px;

$input-icon-width: 16px;

$input-color: $brand-color-a;

@include placeholder($input-color);



// Make textarea height behave
textarea {
	height: auto;
	overflow: auto;
	resize: none;
}

// Elements with actions need pointers
input[type="submit"],
button {
	cursor: pointer;
}

input,
button,
select {
	margin: 0;
	line-height: normal;
}

input,
button,
select,
textarea {
	font-family: $font-family-base;
}

button {
	-webkit-font-smoothing: inherit;
}

label {
	cursor: pointer;
	display: inline-block;
}

// Remove -webkit styles from text inputs
input[type="text"],
input[type="email"],
input[type="tel"],
input[type="url"],
input[type="date"],
input[type="week"],
input[type="month"],
input[type="datetime"],
input[type="datetime-local"],
input[type="time"],
input[type="number"],
input[type="search"],
input[type="password"],
textarea {
	@include appearance(none);
}

// Inputs, Textareas, Selects
input,
textarea,
select,
.select-replace {
	padding: 0 $input-padding-x-smallscreen;
	width: 100%;
	max-width: 100%;
	margin-bottom: $vr;
	font-size: 16px;
	font-weight: $font-weight-light;
	color: $input-color;
	background-color: #fafafa;
	border: $input-border-width solid #e8e8e8;
	border-radius: $input-border-radius;
	vertical-align: middle;
	display: inline-block;
	transition: all 100ms;
	white-space: nowrap;
	box-shadow: inset 1px 1px 2px 0 rgba(0,0,0,0.1);
	height: $input-height-smallscreen + $vr*2;
	outline: none;

	@media (min-width: $break-point-d) {
		padding: 0 $input-padding-x;
		height: $input-height + $vr*2;
	}

	@media (min-width: $break-point-f) {
		font-size: 18px;
	}

	&:hover,
	&:focus {
		border: 1px solid $brand-color-b;
		outline: none;
	}

	&[disabled] {
		background: #f0f0f0;
		border-color: #ddd;
		color: #ccc;
		cursor: not-allowed;

		&:hover,
		&:focus {
			border-color: #ccc;
		}

		@include placeholder(#ccc);
	}

	&[readonly] {
		cursor: not-allowed;

		&:hover,
		&:focus {
			border-color: #ccc;
		}
	}

	.lt-ie9 & {
		height: auto;
		max-width: none!important;
		padding-top: $input-padding-y;
		padding-bottom: $input-padding-y;
	}
}

.select-replace {
	display: block;
	position: relative;
	padding: 0;

	@media (min-width: $break-point-d) {
		display: inline-block;
		padding: 0;
	}

	.lt-ie9 & {
		height: auto;
		padding: 0;
	}

	select {
		background: none;
		position: relative;
		border: 0;
		box-shadow: none;
		text-indent: 0.01px;
		text-overflow: '';
		padding-right: 40px;
		height: ($input-height-smallscreen + $vr*2) - 2px; // account for border
		@include appearance(none);
		z-index: 9;

		@media (min-width: $break-point-d) {
			height: ($input-height + $vr*2) - 2px; // account for border
		}

		.lt-ie10 & {
			padding-right: 0;
		}

		option {
			padding: 0 10px;
		}
	}

	&:after {
		content: " ";
		display: block;
		position: absolute;
		z-index: 1;
		width: 20px;
		height: 12px;
		top: 12px;
		right: 5px;
		background-position: 100% 50%;
		background-repeat: no-repeat;
		background-image: url("/images/css/bg-select_333333.svg");
		@include background-size(20px, 12px);

		@media (min-width: $break-point-d) {
			top: 14px;
		}

		.lt-ie10 & {
			display: none;
		}
	}
}

@-moz-document url-prefix(){
	.select-replace {
		overflow: hidden;
	}
	.select-replace select {
		@include calc(width, "100% + 20px");
		max-width: none !important;
	}
}

select::-ms-expand {
	display: none;
}

// Make multiple select elements height not fixed
select[multiple],
select[size] {
	height: auto;
	background: #fff;
	padding-top: $input-padding-y*2;
	line-height: $input-height - $vr;
	padding-bottom: $input-padding-y;
	padding-right: 5px;
}


// Inputs within a label
label input,
label textarea,
label select {
	display: block;
}

textarea {
	height: $vr*30;
	white-space: normal;
	overflow: auto;
	margin: 0;
	padding: $input-padding-y-smallscreen $input-padding-x-smallscreen;

	@media (min-width: $break-point-d) {
		padding: $input-padding-y*2 $input-padding-x;
		height: $vr*30;
	}
}

@media (min-width: $break-point-d) {

	.input-mini {
		width: ($gcw*1) + ($ggw*1);
	}
	.input-small {
		width: ($gcw*2) + ($ggw*1);
	}
	.input-medium {
		width: ($gcw*3) + ($ggw*2);
	}
	.input-large {
		width: ($gcw*4) + ($ggw*3);
	}
	.input-xlarge {
		width: ($gcw*5) + ($ggw*4);
	}
	.input-xxlarge {
		width: ($gcw*6) + ($ggw*5);
	}
	.input-xxxlarge {
		width: ($gcw*7) + ($ggw*6);
	}
	.input-xxxxlarge {
		width: ($gcw*8) + ($ggw*7);
		max-width: 90%;
	}
}

// radios and checkboxes
input[type="checkbox"],
input[type="radio"] {
	width: 18px;
	height: 18px;
	padding: 0;
	margin: 0;
	outline: 0;
	line-height: normal;
	cursor: pointer;
	background-color: #fff;
	border: 1px solid #b4b4b4;
	transition: border-color 100ms;
	position: relative;
	display: inline-block;
	vertical-align: top;
	@include appearance(none);

	.lt-ie10 & {
		border: 0;
	}

	&::-moz-focus-inner {
		border: 0;
		padding: 0;
	}

	&:hover,
	&:focus {
		border-color: #404040;
	}

	&[disabled] {
		background: #f0f0f0;
		border-color: #ccc;
		color: #ccc;
		cursor: not-allowed;

		&:hover,
		&:focus {
			border-color: #ccc;
		}
	}

	&[readonly] {

		&:hover,
		&:focus {
			border-color: #ccc;
		}
	}
}

input[type="checkbox"] {

	// &:after {
	// 	content: '';
	// 	position: absolute;
	// 	top: 1px;
	// 	left: 0;
	// 	width: 100%;
	// 	height: 100%;
	// 	line-height: 100%;
	// 	text-align: center;
	// 	font-size: 14px;
	// 	content: "\2714";
    //
	// 	//hide to begin with
	// 	display: none;
	// }
    //
	// &:checked {
    //
	// 	&:after {
	// 		display: block;
	// 	}
	// }
    //
	// &[disabled] {
    //
	// 	&:after {
	// 		color: #ccc;
	// 	}
	// }
    //
	// .lt-ie9 & {
	// 	border: 0!important;
	// }
}

input[type="radio"] {
	// border-radius: 100%;
    //
	// &:after {
	// 	content: '';
	// 	position: absolute;
	// 	top: 9px;
	// 	left: 9px;
	// 	width: 0;
	// 	height: 0;
	// 	background: #333;
	// 	border-radius: 100%;
	// 	box-shadow: 0 1px 2px rgba(0,0,0,0.2);
	// 	transition: all 100ms;
	// }
    //
	// &:checked,
	// &[checked] {
    //
	// 	&:after {
	// 		width: 8px;
	// 		height: 8px;
	// 		top: 4px;
	// 		left: 4px;
	// 	}
	// }
    //
	// &[disabled] {
    //
	// 	&:after {
	// 		background: #ccc;
	// 	}
	// }
	// .lt-ie9 & {
	// 	border: 0!important;
	// }
}

input[type="radio"],
input[type="checkbox"] {
	margin: 0;
	padding: 0;
	box-shadow: none;
	height: auto;
	width: auto;
	background: none;
	border: 0;

	.lt-ie9 & {
		display: inline;
	}
}


.radio,
.checkbox {
	margin-bottom: $vr;
	display: block;
	position: relative;
	padding-left: 30px;
	padding-top: $vr*2;
	line-height: $vr*3;
	font-size: 12px;

	@media(min-width: $break-point-e) {
		padding-top: $vr;
		line-height: $vr*5;
		font-size: 16px;
	}

	&:first-child {

		@media (min-width: $break-point-d) {
			margin-top: $vr;
		}
	}

	&.disabled {
		color: #ccc;
	}

	&.checklist-item {
		margin-top: 0;
	}

	.checkbox-replace,
	.radio-replace {
		position: absolute;
		top: 7px;
		left: 0;
	}
}

.checkbox .checkbox-replace-input,
.radio .radio-replace-input {
	@include visually-hidden();
}

.checkbox-replace,
.radio-replace {
	width: $vr*4;
	height: $vr*4;
	padding: 0;
	margin: 0;
	outline: 0;
	line-height: normal;
	cursor: pointer;
	background-color: transparent;
	border: 2px solid $brand-color-a;
	transition: none;
	position: relative;
	display: inline-block;
	vertical-align: top;
	@include appearance(none);

	&::-moz-focus-inner {
		border: 0;
		padding: 0;
	}

	&:hover,
	input:focus + &,
	input:active + & {
		border-color: $brand-color-c;
	}

	input[disabled] + & {
		background: #f0f0f0;
		border-color: #ccc;
		color: #ccc;
		cursor: not-allowed;

		&:hover,
		&:focus {
			border-color: #ccc;
		}
	}

	input[disabled] +  & {

		&:hover,
		&:focus {
			border-color: #ccc;
		}
	}
}

.checkbox-replace {
	border-radius: $input-border-radius;

	&:after {
		content: '';
		position: absolute;
		top: 3px;
		left: 0;
		width: 100%;
		height: 100%;
		line-height: 100%;
		text-align: center;
		font-size: 16px;
		content: "\2714"; // a tick
		display: none;
	}

	input:checked + & {
		color: $input-color;
		background: $brand-color-b;
		border-color: $input-color;

		&:after {
			display: block;
		}
	}

	input[disabled] + & {
		background: #f0f0f0;
		border-color: #ccc;

		&:after {
			color: #ccc;
		}
	}

	.lt-ie9 & {
		border: 0!important;
	}
}

.radio-replace {
	border-radius: 100%;

	&:after {
		content: '';
		position: absolute;
		top: 7px;
		left: 7px;
		width: 0;
		height: 0;
		background: $input-color;
		border-radius: 100%;
		transition: all 100ms;
	}

	input:checked + & {
		border-color: $input-color;

		&:after {
			width: 14px;
			height: 14px;
			top: 3px;
			left: 3px;
		}
	}

	input[disabled] + & {

		&:after {
			background: #ccc;
		}
	}

	.lt-ie9 & {
		border: 0!important;
	}
}

// Help out input buttons
input[type="button"],
input[type="reset"],
input[type="submit"] {
	width: auto;
	height: auto;
}

input[type=number]::-webkit-inner-spin-button,
input[type=number]::-webkit-outer-spin-button {
	@include appearance(none);
	margin: 0;
}


// Errors
input,
textarea,
select,
.select-replace {

	&.input-validation-error,
	&.input-validation-error:hover,
	&.input-validation-error:focus,
	&.input-validation-error-replace,
	&.input-validation-error-replace:hover,
	&.input-validation-error-replace:focus {
		border-color: #c20000;
	}
}

.field-validation-valid {
	display: none;
}

.field-validation-error,
.validation-summary-errors {
	color: #c20000;
	display: block;
	clear: both;

	@media (min-width: $break-point-d) {

	}
}


.form {
	text-align: left;
	@include clearfix();

	fieldset{
		width: 100%;
	}
}

.form-actions {
	overflow: hidden;
	max-width: 100%;
	margin-top: $vr;
	padding-top: $vr*2;
	border-top: 1px solid #ccc;

	@media (min-width: $break-point-d) {
		margin-top: $vr*2;
		padding-top: $vr*3;
	}

	.btn {
		margin-bottom: $vr;
	}
}


.control-label {
	font-size: 16px;
	line-height: $input-height;
	font-weight: $font-weight-bold;

	@media (min-width: $break-point-d) {
		font-size: 18px;
		line-height: $input-height;
	}

	label {
		line-height: $vr*4;
	}
}

.control-summary {
	font-size: 16px;
	font-weight: $font-weight-bold;
	margin-bottom: $vr;

	@media (min-width: $break-point-d) {
		font-size: 18px;
	}

	.control-label + .controls & {

		@media (min-width: $break-point-d) {
			margin-top: $vr*2;
		}
	}
}

.control-inline {

	@media (min-width: $break-point-d) {
		display: inline-block;
		clear: none;
		margin-right: $vr*3;
		margin-bottom: $vr;
		clear: none;
	}

	.html-rtl & {

		@media (min-width: $break-point-d) {
			margin-right: 0;
			margin-left: $vr*3;
		}
	}
}

.control-group {
	padding-bottom: $vr;

	@media (min-width: $break-point-d) {
		padding-bottom: $vr*2;
	}

	.btn-icon-small {
		margin-bottom: 0;
	}
}

.control-group-block {

	input,
	select,
	.select-replace {
		display: block;
	}
}

.control-optional,
.control-help-inline {
	color: #999;
	font-weight: $font-weight-regular;
	font-family: $font-family-base;
	font-size: $font-size-small;
	line-height: $line-height-small;

	.control-label & {

		@media (min-width: $break-point-d) {
			display: none;
		}
	}

	.controls & {
		display: none;

		@media (min-width: $break-point-d) {
			display: inline;
		}

		.btn {
			float: left;
		}
	}
}

.form-vertical {

}

.form-horizontal {

	// Float the labels left
	.control-label {

		@media (min-width: $break-point-d) {
			float: left;
			@include fluid-width(($gcw*3) + ($ggw*2), $max-width);
			padding-top: $vr;
			text-align: right;

			.html-rtl & {
				float: right;
				text-align: left;
			}
		}
	}

	// Move over all input controls and content
	.controls {
		@include clearfix();

		@media (min-width: $break-point-d) {
			@include fluid-margin-left(($gcw*3) + ($ggw*3), $max-width);
			clear: none;
		}

		> .btn {

			&:first-child {
				margin-top: $vr;
			}
		}
	}
}
